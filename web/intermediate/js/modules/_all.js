var Note=function(e,f){var a=this;a.title=ko.observable();a.content=ko.observable();a.createdOn=ko.observable();a.isFavourited=ko.observable();a.isStarred=ko.observable();Note.prototype.initialize=function(b,d){a.fixIsoStringBug();a.setTitle(b);a.setContent(d);a.createdOn((new Date).toISOString());a.isFavourited(!1);a.isStarred(!1);debug.info("Successfully created note!",a)};Note.prototype.setTitle=function(b){$.trim(b)?a.title($.trim(b)):a.title("No title")};Note.prototype.setContent=function(b){$.trim(b)?
a.content($.trim(b)):a.content("No content")};a.toggleStar=function(){a.isStarred(!a.isStarred())};Note.prototype.fixIsoStringBug=function(){if(!Date.toISOString){var a=function(a){return a<10?"0"+a:a};Date.prototype.toISOString=function(){var d=this.getUTCFullYear()+"-"+a(this.getUTCMonth()+1)+"-"+a(this.getUTCDate())+"T"+a(this.getUTCHours())+":"+a(this.getUTCMinutes())+":"+a(this.getUTCSeconds())+".",c=this.getUTCMilliseconds();c<100&&(c="0"+c);c<10&&(c="0"+c);return d+c+"Z"}}};a.initialize(e,
f)};
var Notebook=function(){var a=this;a.STORE_KEY="NOTEBOOK_STORE";a.notes=ko.observableArray();a.isEmpty=ko.observable(!0);a.initialize=function(){a.loadNotes();a.updateIsEmpty();debug.info("Successfully created notebook!",a)};a.addNote=function(){if($("#createNewNoteForm").valid()){var b=$("#noteTitle").val(),e=$("#noteContent").val(),b=new Note(b,e);debug.info("Adding new note...",b);a.notes(a.notes().reverse());a.notes.push(b);a.notes(a.notes().reverse());$("#noteTitle").val("");$("#noteContent").val("")}a.saveNotes();
a.updateIsEmpty()};a.removeNote=function(b){a.notes.remove(b);a.saveNotes();a.updateIsEmpty()};a.postProcess=function(){$("time.timeago").timeago()};a.focusCreateNote=function(){$("#createNewNoteDiv").collapse("show");$("#noteTitle").focus()};a.updateIsEmpty=function(){a.notes().length==0?a.isEmpty(!0):a.isEmpty(!1)};a.loadNotes=function(){debug.info("Attempting to load from localstorage...");if(Modernizr.localstorage){debug.log("Checking for previously stored data...");var b=localStorage.getItem(a.STORE_KEY);
b?(debug.info("Found previously stored data! Applying Knockout mapping...",b),b=JSON.parse(b),$.each(b,function(b,c){debug.log(b,c);var d=new Note;d.setTitle(c.title);d.setContent(c.content);d.createdOn(c.createdOn);d.isFavourited(c.isFavourited);d.isStarred(c.isStarred);a.notes.push(d)})):debug.warn("No previously stored data found.")}else debug.warn("No localstorage capability found.")};a.saveNotes=function(){debug.info("Attempting to save to localstorage...");Modernizr.localstorage?localStorage.setItem(a.STORE_KEY,
ko.toJSON(a.notes())):debug.warn("No localstorage capability found.")};a.deleteAllNotes=function(){a.isEmpty()||(debug.log("Removing all notes and clearing local storage."),a.notes.removeAll(),a.saveNotes(),a.updateIsEmpty())};a.toggleStar=function(b){b.toggleStar();a.saveNotes()};a.toggleAboutModal=function(){$("#aboutMe").modal("toggle")};a.initialize()};
var Storage=function(){var a=this;a.STORE_KEY="NOTEBOOK_APP_DATA";a.model=null;a.loadModel=function(){debug.info("Attempting to load from localstorage...");if(Modernizr.localstorage){debug.log("Checking for previously stored data...");var b=localStorage.getItem(a.STORE_KEY);b?(debug.info("Found previously stored data! Applying Knockout mapping..."),a.model=ko.mapping.fromJS(b,{ignore:["addNote","removeNote"]})):(debug.warn("No previously stored data found."),a.model=new Notebook(a))}else debug.warn("No localstorage capability found."),
a.model=new Notebook(a);return a.model};a.storeModel=function(){debug.info("Attempting to store to localstorage...");Modernizr.localstorage?localStorage.setItem(a.STORE_KEY,ko.mapping.toJS(a.model)):debug.warn("No localstorage capability found.")}};
